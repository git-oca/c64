#import "../macros/wait.asm"
#import "../macros/text.asm"
#import "../macros/ptr.asm"
#import "../utils/modes.asm"
#import "../utils/scrolls.asm"

.const indexes = List().add(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    1, 1, 1 ,1, 1, 1, 1, 1, 1,
    2, 2, 2, 2, 2, 2, 2, 2,
    3, 3, 3, 3, 3, 3, 3, 
    4, 4, 4, 4, 4, 4, 
    5, 5, 5, 5, 5,
    6, 6, 6, 6,
    7, 7, 7, 
    8, 8, 8,
    9, 9, 9,
    10, 10, 10,
11,11,11,
12,12,12,
13,13,13,
14,14,14,
15,15,15,
16,16,16,
17,17,17,
18,18,18,
19,19,
20,20,
21,21,
22,22,
23,23,
24,24,
25,25,
26,26,
27,27,
28,28,
29,29,
30,30,
31,31,
32,32,
33,33,
34,34,
35,35,
36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139
)  
seq_double_bars_text: {
    ldx #0
    !:
    .for (var i = 0;i< 4 ;i++) {
        lda the_end_logo_mix + 256 * i,x 
        sta $0400 + 256 *i,x
    }
    inx 
    cpx #0
    bne !-   
    __done()
}

seq_tweaked_logo: {
    ldx #0
    !:
    .for (var i = 0;i< 4 ;i++) {
        lda tweaked_logo + 256 * i,x 
        sta $0400 + 256 *i,x
    }
    inx 
    cpx #0
    bne !-   
    __done()
}

seq_tweaked: {
        .for(var i= 0;i<150;i++) {
            lda colors+mod(indexes.get(i+0), 200) 
            sta $d021
            lda colors+mod(indexes.get(i+1),200 )
            sta $d022
            lda colors+mod(indexes.get(i+2), 200 )
            sta $d023
            lda colors+mod(indexes.get(i+1), 200)
            sta $d024
           
            bit $ea
            ldx #$08                     
            dex         
            bne *-1                       
            nop
            nop
        }
    
   
    /*
     * Init
     */
    
    bit __seq_first_frame 
    bmi !do_init+
    jmp !skip_init+  
    !do_init:
      sdb_init()
      init_scroll(LIGHT_GREEN, 100)
     

        lda #$ff
        sta $d01c        // multi color mode 
        lda #GREEN
        sta $d025        // common multicolor 0
        lda #WHITE
        sta $d026        // common multicolor 1 
        lda #LIGHT_GREEN
        sta $d027        // sprite 0 own color
        sta $d028        // sprite 1 own color 
        sta $d029        // sprite 2 own color
        sta $d02A        // sprite 3 own color
        sta $d02B        // sprite 4 own color
        sta $d02C        // sprite 5 own color
        sta $d02D        // sprite 6 own color
        sta $d02E        // sprite 7 own color
      
        ldx #sprite_bar/64                
        stx $07F8
        stx $07F9
        stx $07FA
        stx $07FB
        stx $07FC
        stx $07FD
        stx $07FE

      
      lda #0
      sta $D017 // no double size for Y

      jmp !end+ 
    
    !skip_init:

    lda #0
    sta $d021
    sta $d022
    sta $d023
    sta $d024

    // overall speed
    inc speed 
    lda speed 
    cmp #1 
    bne !end+
    lda #0 
    sta speed

    ldx #0
    lda colors
    sta tmp 
    !:
        lda colors+1,x
        sta colors,x
        inx
        cpx #200
        bne !- 
        lda tmp
        sta colors+199

    
    lda bar_pos    
    cmp #58 
    bcc flip     
    cmp #210    
    bcs flip    
    jmp skip_flip

flip:
    lda $D01B 
    eor #$FF
    sta $D01B
    lda bar_inc
    eor #$FF
    clc
    adc #1
    sta bar_inc

skip_flip:
    lda bar_pos
    clc
    adc bar_inc
    sta bar_pos 
    sta $D001
    sta $D003
    sta $D005
    sta $D007
    sta $D009
    sta $D00B
    sta $D00D
   
!end:
    .const end_frame = 79 
   
    lda __seq_slow_counter
    cmp #end_frame
      bne !+
         __next_seq()
      !:       
    __return()

/*
 * DATA
 */
pattern:
.byte %0111_1111

speed:
.byte 0 

pos:
.byte 0

cptr:
.byte 0 

bar_pos:
.byte 100 
bar_inc:
.byte 2
}

/*
 * MACROS
 */


.macro sdb_init() {
    lda #$ff              
    sta $D015 // all sprite                     
    
    lda #12
    sta __seq_slow_counter_factor

    lda #BLACK 
    sta $d020
    sta $d021
}

the_end_logo_mix:
// character codes (1000 bytes)
.byte  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
.byte  32, 32, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 32, 32, 32, 30, 30, 30, 30, 32, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 32, 32, 32
.byte  32, 32, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32, 32, 30, 32, 32, 30, 32, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32, 32
.byte  32, 32, 30, 30, 30, 30, 32, 32, 32, 30, 30, 30, 30, 30, 30, 32, 32, 30, 32, 32, 32, 30, 32, 32, 30, 32, 30, 32, 32, 30, 30, 30, 30, 30, 30, 30, 30, 32, 32, 32
.byte  32, 32, 32, 32, 32, 30, 32, 32, 32, 30, 32, 32, 32, 32, 30, 32, 32, 30, 32, 32, 32, 30, 32, 32, 30, 32, 30, 32, 32, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 30, 32, 32, 32, 30, 32, 32, 32, 32, 30, 32, 32, 30, 30, 30, 30, 30, 32, 32, 30, 32, 30, 32, 32, 30, 30, 30, 30, 32, 32, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 30, 32, 32, 32, 30, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 32, 30, 32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 30, 32, 32, 32, 30, 32, 32, 32, 32, 30, 32, 32, 30, 30, 30, 30, 30, 32, 32, 30, 32, 30, 32, 32, 30, 30, 30, 30, 32, 32, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 30, 32, 32, 32, 30, 32, 32, 32, 32, 30, 32, 32, 30, 32, 32, 32, 30, 32, 32, 30, 32, 30, 32, 32, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 30, 32, 32, 32, 30, 32, 32, 32, 32, 30, 32, 32, 30, 32, 32, 32, 30, 32, 32, 30, 32, 30, 32, 32, 30, 30, 30, 30, 30, 30, 30, 30, 32, 32, 32
.byte  32, 32, 32, 32, 32, 30, 32, 32, 32, 30, 32, 32, 32, 32, 30, 32, 32, 30, 32, 32, 32, 30, 32, 32, 30, 32, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32, 32
.byte  32, 32, 32, 32, 32, 30, 30, 30, 30, 30, 32, 32, 32, 32, 30, 30, 30, 30, 32, 32, 32, 30, 30, 30, 30, 32, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 32, 32, 32
.byte  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
.byte  30, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 30, 30, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 30, 30
.byte  30, 30, 32, 30, 30, 30, 30, 30, 30, 30, 30, 30, 32, 30, 32, 30, 30, 32, 30, 30, 30, 32, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 32, 30, 30, 30
.byte  30, 30, 32, 30, 30, 32, 32, 32, 32, 32, 32, 32, 32, 30, 32, 30, 30, 30, 32, 30, 30, 32, 30, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 30, 32, 30, 30, 30
.byte  30, 30, 32, 30, 30, 32, 30, 30, 30, 30, 30, 30, 30, 30, 32, 30, 30, 30, 30, 32, 30, 32, 30, 30, 32, 30, 30, 30, 30, 30, 30, 30, 30, 32, 30, 30, 32, 30, 30, 30
.byte  30, 30, 32, 30, 30, 32, 32, 32, 32, 30, 30, 30, 30, 30, 32, 30, 30, 30, 30, 30, 32, 32, 30, 30, 32, 30, 32, 32, 32, 32, 30, 30, 30, 32, 30, 30, 32, 30, 30, 30
.byte  30, 30, 32, 30, 30, 30, 30, 30, 32, 30, 30, 30, 30, 30, 32, 30, 30, 30, 30, 30, 30, 30, 30, 30, 32, 30, 32, 30, 30, 32, 30, 30, 30, 32, 30, 30, 32, 30, 30, 30
.byte  30, 30, 32, 30, 30, 32, 32, 32, 32, 30, 30, 30, 30, 30, 32, 30, 30, 32, 32, 30, 30, 30, 30, 30, 32, 30, 32, 30, 30, 32, 30, 30, 30, 32, 30, 30, 32, 30, 30, 30
.byte  30, 30, 32, 30, 30, 32, 30, 30, 30, 30, 30, 30, 30, 30, 32, 30, 30, 32, 30, 32, 30, 30, 30, 30, 32, 30, 32, 30, 30, 32, 30, 30, 30, 32, 30, 30, 32, 30, 30, 30
.byte  30, 30, 32, 30, 30, 32, 32, 32, 32, 32, 32, 32, 32, 30, 32, 30, 30, 32, 30, 30, 32, 30, 30, 30, 32, 30, 32, 30, 30, 32, 32, 32, 32, 32, 30, 30, 32, 30, 30, 30
.byte  30, 30, 32, 30, 30, 30, 30, 30, 30, 30, 30, 30, 32, 30, 32, 30, 30, 32, 30, 30, 30, 32, 30, 30, 32, 30, 32, 30, 30, 30, 30, 30, 30, 30, 30, 30, 32, 30, 30, 30
.byte  30, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 30, 30, 30, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 30, 30
.byte  30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30

tweaked_logo:
.byte  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
.byte  32, 32, 30, 30, 30, 30, 30, 30, 30, 32, 32, 32, 30, 32, 30, 30, 30, 30, 30, 30, 30, 30, 30, 32, 30, 32, 32, 30, 30, 30, 30, 30, 30, 32, 30, 30, 30, 32, 32, 32
.byte  32, 32, 32, 32, 32, 30, 32, 32, 30, 32, 32, 32, 30, 32, 30, 32, 32, 32, 32, 32, 32, 32, 30, 32, 30, 32, 30, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32, 30, 32, 32
.byte  32, 32, 32, 32, 32, 30, 32, 32, 30, 32, 30, 32, 30, 32, 30, 30, 32, 32, 32, 30, 30, 30, 30, 32, 30, 30, 32, 32, 32, 30, 30, 32, 32, 32, 30, 32, 32, 30, 32, 32
.byte  32, 32, 32, 32, 32, 30, 32, 32, 30, 30, 30, 30, 30, 32, 30, 32, 32, 32, 32, 30, 32, 32, 30, 32, 30, 32, 30, 32, 32, 30, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32
.byte  32, 32, 32, 32, 32, 30, 32, 32, 32, 30, 32, 30, 32, 32, 30, 30, 30, 30, 32, 30, 32, 32, 30, 30, 30, 32, 32, 30, 32, 30, 30, 30, 30, 30, 30, 30, 30, 32, 32, 32
.byte  32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32, 32, 32, 32,  1, 32, 13,  9, 14,  9, 32,  4,  5, 13, 15, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 30, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 30, 30, 30, 30, 32, 13,  1, 11,  9, 14,  7, 32, 19, 15, 13,  5, 32,  6, 21, 14, 32, 23,  9, 20,  8, 32, 30, 30, 30, 30, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 20,  8,  5, 32,  5, 24, 20,  5, 14,  4,  5,  4, 32, 13, 15,  4,  5, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
.byte  32, 32, 32, 32, 18,  1, 19, 20,  5, 18, 32,  3, 15, 12, 15, 18, 32, 12,  9, 19, 20, 32,  2, 25, 32, 18,  1, 19, 20,  5, 18,  2, 21, 19, 20,  5, 18, 32, 32, 32
.byte  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32

// From Rasterbuster https://rasterbuster.lubber.de/
colors:
.byte 0,0,7,10,8,10,8,2,8,2,9,2,9,11,9,11,0,11,0,7,10,8,10,8,2,8,2,9,2,9,11,9,11,0,11,0,8,10,8,2,8,2,9,2,9,11,9,11,0,11,0,8,2,8,2,9,2,9,11,9,11,0,11,0,8,2,9,2,9,11,9,11,0,11,0,9,2,9,11,9,11,0,11,0,9,11,9,11,0,11,0,9,11,0,11,0,0,11,0,0,11,0,0,11,0,11,6,0,11,0,11,6,11,6,0,11,0,11,6,11,6,12,6,0,11,0,11,6,11,6,12,6,12,14,0,11,0,11,6,11,6,12,6,12,14,12,14,0,11,0,11,6,11,6,12,6,12,14,12,14,15,14,0,11,0,11,6,11,6,12,6,12,14,12,14,15,14,15,3,0,11,0,11,6,11,6,12,6,12,14,12,14,15,14,15,3,15,3,0,11,0,11,6,11,6,12,6,12,14,12,14,15,14,15,3,15,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,8,2,8,2,9,2,9,11,9,11,0,11,0,0,0,0,10,8,2,8,2,9,2,9,11,9,11,0,11,0,0,0,0,2,8,2,9,2,9,11,9,11,0,11,0,0,0,0,2,9,2,9,11,9,11,0,11


